# [MANAGER]: Manager Deployment Configurations
controllerManager:
  replicas: 1
  container:
    image:
      repository: homeclusterdev/autoscaler
      tag: latest
    imagePullPolicy: IfNotPresent
    args:
      - "--leader-elect"
      - "--metrics-bind-address=:8443"
      - "--health-probe-bind-address=:8081"
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 10m
        memory: 64Mi
    livenessProbe:
      initialDelaySeconds: 15
      periodSeconds: 20
      httpGet:
        path: /healthz
        port: 8081
    readinessProbe:
      initialDelaySeconds: 5
      periodSeconds: 10
      httpGet:
        path: /readyz
        port: 8081
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - "ALL"
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  terminationGracePeriodSeconds: 10
  serviceAccountName: homelab-autoscaler-controller-manager

# [RBAC]: To enable RBAC (Permissions) configurations
rbac:
  enable: true

# [CRDs]: To enable the CRDs
crd:
  # This option determines whether the CRDs are included
  # in the installation process.
  enable: true

  # Enabling this option adds the "helm.sh/resource-policy": keep
  # annotation to the CRD, ensuring it remains installed even when
  # the Helm release is uninstalled.
  # NOTE: Removing the CRDs will also remove all cert-manager CR(s)
  # (Certificates, Issuers, ...) due to garbage collection.
  keep: true

# [METRICS]: Set to true to generate manifests for exporting metrics.
# To disable metrics export set false, and ensure that the
# ControllerManager argument "--metrics-bind-address=:8443" is removed.
metrics:
  enable: true

# [WEBHOOKS]: Webhooks configuration
# The following configuration is automatically generated from the manifests
# generated by controller-gen. To update run 'make manifests' and
# the edit command with the '--force' flag
webhook:
  enable: true

# [PROMETHEUS]: To enable a ServiceMonitor to export metrics to Prometheus set true
prometheus:
  enable: false

# [CERT-MANAGER]: To enable cert-manager injection to webhooks set true
certmanager:
  enable: true

# [NETWORK POLICIES]: To enable NetworkPolicies set true
networkPolicy:
  enable: false

# [GRPC SERVICE]: gRPC service configuration (always available for cluster autoscaler)
grpcService:
  enabled: true
  type: ClusterIP
  port: 50051

# [CLUSTER AUTOSCALER]: Cluster autoscaler integration (optional, disabled by default)
clusterAutoscaler:
  enabled: false
  image:
    repository: registry.k8s.io/autoscaling/cluster-autoscaler
    tag: v1.28.2
    pullPolicy: IfNotPresent
  
  # Node groups configuration - list of node groups to manage
  nodeGroups: []
  # Example:
  # nodeGroups:
  #   - name: worker-nodes
  #     minSize: 1
  #     maxSize: 10
  #     desiredSize: 3
  
  # gRPC provider configuration
  grpcProvider:
    endpoint: "{{ include \"chart.name\" . }}-grpc-service:50051"
  
  # Scaling policies
  scaleDownDelay: "10m"
  scaleDownUnneededTime: "10m"
  scaleDownUtilizationThreshold: 0.5
  skipNodesWithLocalStorage: true
  skipNodesWithSystemPods: true
  
  # Additional cluster autoscaler arguments
  extraArgs: []
  # Example:
  # extraArgs:
  #   - --balance-similar-node-groups
  #   - --skip-nodes-with-local-storage=false
  
  # Resource limits and requests
  resources:
    limits:
      cpu: 100m
      memory: 300Mi
    requests:
      cpu: 100m
      memory: 300Mi
  
  # Security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 65534
    fsGroup: 65534
  
  # Pod security context
  podSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - "ALL"
    readOnlyRootFilesystem: true
  
  # Service account configuration
  serviceAccount:
    create: true
    name: ""
    annotations: {}
  
  # Node selector, tolerations, and affinity
  nodeSelector: {}
  tolerations: []
  affinity: {}
  
  # Pod annotations and labels
  podAnnotations: {}
  podLabels: {}
